apiVersion: {{ template "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "elasticsearch.coordinating.fullname" . }}
  labels: {{- include "elasticsearch.labels" . | nindent 4 }}
    role: coordinating-only
spec:
  strategy:
    type: {{ .Values.coordinating.updateStrategy.type }}
    {{- if (eq "Recreate" .Values.coordinating.updateStrategy.type) }}
    rollingUpdate: null
    {{- end }}
  selector:
    matchLabels: {{- include "elasticsearch.matchLabels" . | nindent 6 }}
      role: coordinating-only
  replicas: {{ .Values.coordinating.replicas }}
  template:
    metadata:
      labels: {{- include "elasticsearch.labels" . | nindent 8 }}
        role: coordinating-only
      {{- with .Values.coordinating.podAnnotations }}
      annotations: {{- toYaml . | nindent 10 }}
      {{- end }}
    spec:
{{- include "elasticsearch.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.coordinating.affinity }}
      affinity: {{- include "elasticsearch.tplValue" (dict "value" .Values.coordinating.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.coordinating.nodeSelector }}
      nodeSelector: {{- include "elasticsearch.tplValue" (dict "value" .Values.coordinating.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.coordinating.tolerations }}
      tolerations: {{- include "elasticsearch.tplValue" (dict "value" .Values.coordinating.tolerations "context" $) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "elasticsearch.coordinating.serviceAccountName" . }}
      {{- if .Values.coordinating.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.coordinating.securityContext.fsGroup }}
      {{- end }}
      {{- if .Values.sysctlImage.enabled }}
      ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
      initContainers:
        - name: sysctl
          image: {{ include "elasticsearch.sysctl.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - /scripts/sysctl.sh
          securityContext:
            privileged: true
          volumeMounts:
            - name: initcontainer-script
              mountPath: /scripts/sysctl.sh
              subPath: sysctl.sh
      {{- end }}
      containers:
        - name: elasticsearch
          image: {{ include "elasticsearch.image" . }}
          {{- if .Values.coordinating.securityContext.enabled }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          securityContext:
            runAsUser: {{ .Values.coordinating.securityContext.runAsUser }}
          {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" .Values.image.debug | quote }}
            - name: ELASTICSEARCH_CLUSTER_NAME
              value: {{ .Values.name | quote }}
            - name: ELASTICSEARCH_CLUSTER_HOSTS
              value: {{ template "elasticsearch.discovery.fullname" . }}
            {{- if .Values.plugins }}
            - name: ELASTICSEARCH_PLUGINS
              value: {{ .Values.plugins | quote }}
            {{- end }}
            - name: ELASTICSEARCH_HEAP_SIZE
              value: {{ .Values.coordinating.heapSize | quote }}
            - name: ELASTICSEARCH_IS_DEDICATED_NODE
              value: "yes"
            - name: ELASTICSEARCH_NODE_TYPE
              value: "coordinating"
          ports:
            - name: http
              containerPort: 9200
            - name: transport
              containerPort: 9300
          {{- if .Values.coordinating.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.coordinating.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.coordinating.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.coordinating.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.coordinating.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.coordinating.livenessProbe.failureThreshold }}
            httpGet:
              path: /_cluster/health?local=true
              port: http
          {{- end }}
          {{- if .Values.coordinating.readinessProbe.enabled}}
          readinessProbe:
            initialDelaySeconds: {{ .Values.coordinating.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.coordinating.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.coordinating.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.coordinating.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.coordinating.readinessProbe.failureThreshold }}
            httpGet:
              path: /_cluster/health?local=true
              port: http
          {{- end }}
          {{- if .Values.coordinating.resources }}
          resources: {{- toYaml .Values.coordinating.resources | nindent 12 }}
          {{- end}}
          volumeMounts:
            {{- if .Values.config }}
            - mountPath: /opt/bitnami/elasticsearch/config/elasticsearch.yml
              name: config
              subPath: elasticsearch.yml
            {{- end }}
            - name: data
              mountPath: "/bitnami/elasticsearch/data/"
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.sysctlImage.enabled }}
        - name: initcontainer-script
          configMap:
            name: {{ include "elasticsearch.fullname" . }}-initcontainer
            defaultMode: 0755
        {{- end }}
        {{- if .Values.config }}
        - name: config
          configMap:
            name: {{ include "elasticsearch.fullname" . }}
        {{- end }}
        - name: data
          emptyDir: {}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
